<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2021 Oracle and/or its affiliates.
  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.micronaut</groupId>
    <artifactId>micronaut-parent</artifactId>
    <version>3.0.1</version>
    <relativePath/>
  </parent>

  <groupId>com.oracle.coherence.examples</groupId>
  <artifactId>todo-list-micronaut-server</artifactId>
  <version>21.06.1</version>

  <properties>
    <jdk.version>11</jdk.version>
    <release.version>11</release.version>

    <!-- Coherence properties -->
    <coherence.groupId>com.oracle.coherence.ce</coherence.groupId>
    <coherence.version>${project.version}</coherence.version>

    <!-- Micronaut properties -->
    <micronaut.runtime>netty</micronaut.runtime>
    <micronaut.version>${project.parent.version}</micronaut.version>
    <micronaut.gql.version>3.0.0</micronaut.gql.version>

    <!-- Native image properties -->
    <micronaut.processing.group>todo.list.micronaut.server</micronaut.processing.group>
    <micronaut.processing.module>${project.artifactId}</micronaut.processing.module>

    <!-- Coherence+Micronaut integration properties -->
    <micronaut.coherence.version>3.0.0-SNAPSHOT</micronaut.coherence.version>

    <!-- Maven plugin properties -->
    <plugin.jandex.version>1.1.1</plugin.jandex.version>
    <plugin.exec.version>3.0.0</plugin.exec.version>
    <plugin.npm.version>1.0.4</plugin.npm.version>
    <plugin.resources.version>3.2.0</plugin.resources.version>
    <plugin.jib.version>3.1.4</plugin.jib.version>
  </properties>

  <dependencies>
    <!-- Coherence+Micronaut integration dependencies -->
    <dependency>
      <groupId>io.micronaut.coherence</groupId>
      <artifactId>micronaut-coherence-data</artifactId>
      <version>${micronaut.coherence.version}</version>
    </dependency>

    <!-- Coherence dependencies -->
    <dependency>
      <groupId>${coherence.groupId}</groupId>
      <artifactId>coherence-grpc-proxy</artifactId>
      <version>${coherence.version}</version>
    </dependency>
    <dependency>
      <groupId>${coherence.groupId}</groupId>
      <artifactId>coherence-json</artifactId>
      <version>${coherence.version}</version>
      <exclusions>
        <exclusion>
          <groupId>jakarta.inject</groupId>
          <artifactId>jakarta.inject-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Micronaut dependencies -->
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-http-server-netty</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut.graphql</groupId>
      <artifactId>micronaut-graphql</artifactId>
      <version>${micronaut.gql.version}</version>
    </dependency>

    <!-- Misc dependencies -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Required for Micronaut -->
      <plugin>
        <groupId>io.micronaut.build</groupId>
        <artifactId>micronaut-maven-plugin</artifactId>
        <version>${micronaut.version}</version>
      </plugin>

      <!-- Also required for Micronaut; the micronaut inject dependency
           is included with micronaut-coherence-data -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths combine.children="append">
            <annotationProcessorPath>
              <groupId>io.micronaut.coherence</groupId>
              <artifactId>micronaut-coherence-data</artifactId>
              <version>${micronaut.coherence.version}</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
          <!-- These are for generating a Graal native image -->
          <compilerArgs>
            <arg>-Amicronaut.processing.group=${micronaut.processing.group}
            </arg>
            <arg>-Amicronaut.processing.module=${micronaut.processing.group}
            </arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <!-- Generates an index that Coherence uses to load
           discovered POF types -->
      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
        <version>${plugin.jandex.version}</version>
        <executions>
          <execution>
            <id>make-index</id>
            <goals>
              <goal>jandex</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Instruments annotated @PortableType classes with serialization
           routines -->
      <plugin>
        <groupId>${coherence.groupId}</groupId>
        <artifactId>pof-maven-plugin</artifactId>
        <version>${coherence.version}</version>
        <executions>
          <execution>
            <id>instrument</id>
            <goals>
              <goal>instrument</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${plugin.exec.version}</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-classpath</argument>
            <classpath/>
            <argument>
              com.oracle.coherence.examples.todo.server.Application
            </argument>
          </arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.seovic.maven.plugins</groupId>
        <artifactId>npm-maven-plugin</artifactId>
        <version>${plugin.npm.version}</version>
        <executions>
          <execution>
            <id>build-frontend</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <workingDir>${project.basedir}/src/main/web/react
              </workingDir>
              <script>build</script>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${plugin.resources.version}</version>
        <executions>
          <execution>
            <id>copy-frontend</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/classes/web
              </outputDirectory>
              <resources>
                <resource>
                  <directory>
                    ${project.basedir}/src/main/web/react/build
                  </directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${plugin.jib.version}</version>
            <configuration>
              <from>
                <image>
                  gcr.io/distroless/java:11
                </image>
              </from>
              <to>
                <image>ghcr.io/coherence-community/${project.artifactId}</image>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
              </to>
              <container>
                <ports>
                  <port>1408</port>
                  <port>3000</port>
                </ports>
              </container>
              <containerizingMode>packaged</containerizingMode>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>dockerBuild</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
