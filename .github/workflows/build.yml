name: CI Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 14.x
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'zulu'
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24
    - name: Install Oracle JET
      run: npm install -g @oracle/ojet-cli
    - name: Build Oracle JET front end
      run: |
        pushd java/helidon-server/src/main/web/jet
        npm install
        ojet build
        popd
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build
      env:
        MAVEN_OPTS: -Dmaven.wagon.http.retryHandler.count=3
      run: mvn -B install --file java/pom.xml -s java/.mvn/settings.xml -P docker
    - name: Validate Micronaut Fat Jar
      run: |
        bin/test-fat-jar.sh -d $(ls java/micronaut-server/target/*shaded.jar)
    - name: Validate Spring Fat Jar
      run: |
        bin/test-fat-jar.sh -d $(ls java/spring-server/target/*.jar)
    - name: Run Helidon Server
      run: |
        pushd java/helidon-server
        mvn exec:exec -s ../.mvn/settings.xml &
        popd
    - name : Run Node.js Server
      run: |
        pushd js
        npm install
        npm run start &
        popd
    - name: Run JavaFX Coherence Client
      run: |
        pushd java/coherence-client
        mvn javafx:run -s ../.mvn/settings.xml &
        popd
    - name: Run JavaFX Helidon Client
      run: |
        pushd java/helidon-client
        mvn javafx:run -s ../.mvn/settings.xml &
        popd
    - name: Run Go Client
      run: |
        pushd go
        go test -v .
        popd
