<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2021, 2024 Oracle and/or its affiliates.
  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.micronaut.platform</groupId>
    <artifactId>micronaut-parent</artifactId>
    <version>4.3.6</version> <!-- Micronaut version this example uses -->
    <relativePath/>
  </parent>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>sonatype-staging</id>
      <url>https://oss.sonatype.org/content/groups/staging/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>jcenter.bintray.com</id>
      <url>https://jcenter.bintray.com</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </pluginRepository>
    <pluginRepository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>sonatype-staging</id>
      <url>https://oss.sonatype.org/content/groups/staging/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>jcenter.bintray.com</id>
      <url>https://jcenter.bintray.com</url>
    </pluginRepository>
  </pluginRepositories>

  <groupId>com.oracle.coherence.examples</groupId>
  <artifactId>todo-list-micronaut-server</artifactId>
  <version>23.09.2</version>

  <properties>
    <java.version>17</java.version>
    <release.version>${java.version}</release.version>

    <!-- Coherence properties -->
    <coherence.groupId>com.oracle.coherence.ce</coherence.groupId>
    <coherence.version>24.03</coherence.version>

    <!-- Micronaut properties -->
    <micronaut.runtime>netty</micronaut.runtime>
    <micronaut.version>${project.parent.version}</micronaut.version>
    <micronaut.test.version>4.2.0</micronaut.test.version>
    <micronaut.gql.version>4.2.2</micronaut.gql.version>

    <!-- Native image properties -->
    <micronaut.processing.group>todo.list.micronaut.server</micronaut.processing.group>
    <micronaut.processing.module>${project.artifactId}</micronaut.processing.module>

    <!-- Coherence+Micronaut integration properties -->
    <micronaut.coherence.version>5.0.1</micronaut.coherence.version>

    <!-- Additional dependencies -->
    <hamcrest.version>2.2</hamcrest.version>
    <jansi.version>2.4.1</jansi.version>
    <logback.version>1.5.0</logback.version>
    <restassured.version>5.4.0</restassured.version>
    <rxjava.version>2.2.21</rxjava.version>
    <junit.version>5.10.1</junit.version>

    <!-- Maven plugin properties -->
    <plugin.jandex.version>1.2.3</plugin.jandex.version>
    <plugin.exec.version>3.2.0</plugin.exec.version>
    <plugin.npm.version>1.0.4</plugin.npm.version>
    <plugin.resources.version>3.3.1</plugin.resources.version>
    <plugin.jib.version>3.4.1</plugin.jib.version>
    <plugin.compiler.version>3.12.1</plugin.compiler.version>
    <plugin.micronaut.version>4.4.1</plugin.micronaut.version>

    <frontend-maven-plugin.version>1.15.0</frontend-maven-plugin.version>
    <node.version>v14.17.6</node.version>
    <exec.mainClass>com.oracle.coherence.examples.todo.server.Application</exec.mainClass>
    <registry.url>https://registry.npmjs.org</registry.url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>bom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Coherence+Micronaut integration dependencies -->
    <!-- These are overridden dependencies from the Micronaut BOM;
         This is to ensure we get the expected version -->
    <dependency>
      <groupId>${coherence.groupId}</groupId>
      <artifactId>coherence</artifactId>
      <version>${coherence.version}</version>
    </dependency>
    <dependency>
      <groupId>${coherence.groupId}</groupId>
      <artifactId>coherence-grpc</artifactId>
      <version>${coherence.version}</version>
    </dependency>
    <dependency>
      <groupId>${coherence.groupId}</groupId>
      <artifactId>coherence-grpc-proxy</artifactId>
      <version>${coherence.version}</version>
    </dependency>
    <dependency>
      <groupId>${coherence.groupId}</groupId>
      <artifactId>coherence-json</artifactId>
      <version>${coherence.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micronaut.coherence</groupId>
      <artifactId>micronaut-coherence</artifactId>
      <version>${micronaut.coherence.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micronaut.coherence</groupId>
      <artifactId>micronaut-coherence-data</artifactId>
      <version>${micronaut.coherence.version}</version>
    </dependency>

    <!-- Micronaut dependencies -->
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-http-server-netty</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut.graphql</groupId>
      <artifactId>micronaut-graphql</artifactId>
      <version>${micronaut.gql.version}</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Misc dependencies -->
    <dependency>
      <groupId>io.reactivex.rxjava2</groupId>
      <artifactId>rxjava</artifactId>
      <version>${rxjava.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
      <version>${jansi.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.test</groupId>
      <artifactId>micronaut-test-junit5</artifactId>
      <version>${micronaut.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${restassured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.coherence.examples.test.common</groupId>
      <artifactId>test-common</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- Required for Micronaut -->
      <plugin>
        <groupId>io.micronaut.maven</groupId>
        <artifactId>micronaut-maven-plugin</artifactId>
        <version>${plugin.micronaut.version}</version>
      </plugin>

      <!-- Also required for Micronaut; the micronaut inject dependency
           is included with micronaut-coherence-data -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${plugin.compiler.version}</version>
        <configuration>
          <annotationProcessorPaths combine.children="append">
            <annotationProcessorPath>
              <groupId>io.micronaut.coherence</groupId>
              <artifactId>micronaut-coherence-data</artifactId>
              <version>${micronaut.coherence.version}</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
          <!-- These are for generating a Graal native image -->
          <compilerArgs>
            <arg>-Amicronaut.processing.group=${micronaut.processing.group}
            </arg>
            <arg>-Amicronaut.processing.module=${micronaut.processing.group}
            </arg>
          </compilerArgs>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${plugin.exec.version}</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-Dcoherence.wka=localhost</argument>
            <argument>-Dcoherence.metrics.http.enabled=true</argument>
            <argument>-classpath</argument>
            <classpath/>
            <argument>
              com.oracle.coherence.examples.todo.server.Application
            </argument>
          </arguments>
        </configuration>
      </plugin>

      <!-- exclude Coherence artifacts from shading -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
            <shadedArtifactAttached>true</shadedArtifactAttached>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>
        <configuration>
          <workingDirectory>src/main/web/react</workingDirectory>
          <arguments>build</arguments>
          <nodeVersion>${node.version}</nodeVersion>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>install -s</arguments>
              <npmRegistryURL>${registry.url}</npmRegistryURL>
            </configuration>
          </execution>
          <execution>
            <id>build-frontend</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${plugin.resources.version}</version>
        <executions>
          <execution>
            <id>copy-frontend</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/classes/web
              </outputDirectory>
              <resources>
                <resource>
                  <directory>
                    ${project.basedir}/src/main/web/react/build
                  </directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <coherence.metrics.http.enabled>true</coherence.metrics.http.enabled>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.oracle.coherence.ce</groupId>
        <artifactId>pof-maven-plugin</artifactId>
        <version>${coherence.version}</version>
        <executions>
          <execution>
            <id>instrument</id>
            <goals>
              <goal>instrument</goal>
            </goals>
          </execution>
          <execution>
            <id>instrument-tests</id>
            <goals>
              <goal>instrument-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
        <version>${plugin.jandex.version}</version>
        <executions>
          <execution>
            <id>make-index</id>
            <goals>
              <goal>jandex</goal>
            </goals>
            <phase>process-classes</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!--
      Creates a single architecture image (based on the build machine architecture)
      and publishes it to a local Docker daemon
    -->
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${plugin.jib.version}</version>
            <configuration>
              <from>
                <image>
                  gcr.io/distroless/java17-debian11
                </image>
              </from>
              <to>
                <image>ghcr.io/coherence-community/${project.artifactId}</image>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
              </to>
              <container>
                <ports>
                  <port>1408</port>
                  <port>3000</port>
                  <port>9612</port>
                </ports>
                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
              </container>
              <containerizingMode>packaged</containerizingMode>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>dockerBuild</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Creates a multi-architecture image for linux/amd64 and linux/arm64
      and publishes it to ghcr.io repository
    -->
    <profile>
      <id>ghcr</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${plugin.jib.version}</version>
            <configuration>
              <from>
                <image>
                  gcr.io/distroless/java17-debian11
                </image>
                <platforms>
                  <platform>
                    <architecture>amd64</architecture>
                    <os>linux</os>
                  </platform>
                  <platform>
                    <architecture>arm64</architecture>
                    <os>linux</os>
                  </platform>
                </platforms>
              </from>
              <to>
                <image>ghcr.io/coherence-community/${project.artifactId}</image>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
              </to>
              <container>
                <ports>
                  <port>1408</port>
                  <port>3000</port>
                  <port>9612</port>
                </ports>
                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
              </container>
              <containerizingMode>packaged</containerizingMode>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
