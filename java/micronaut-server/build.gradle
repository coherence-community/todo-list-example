/*
 * Copyright (c) 2021 Oracle and/or its affiliates.
 * Licensed under the Universal Permissive License v 1.0 as shown at
 * https://oss.oracle.com/licenses/upl.
 */

plugins {
  id "application"
  id "java"
  id "com.github.johnrengelman.shadow" version "4.0.2"
  id "com.github.node-gradle.node"     version "3.1.1"
  id "com.google.cloud.tools.jib"      version "3.1.4"
}

repositories {
  mavenLocal()
  maven {
    url = 'https://repo.maven.apache.org/maven2'
    url = "https://plugins.gradle.org/m2/"
  }
}

dependencies {
  // Micronaut annotation processing
  annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
  annotationProcessor "io.micronaut:micronaut-validation:${micronautVersion}"
  annotationProcessor "io.micronaut.coherence:micronaut-coherence-data:${micronautCohVersion}"

  compile "com.oracle.coherence.ce:coherence:${projectVersion}"
  compile "io.micronaut.coherence:micronaut-coherence:${micronautCohVersion}"
  compile "io.micronaut.coherence:micronaut-coherence-data:${micronautCohVersion}"
  compile "jakarta.inject:jakarta.inject-api:${jakartaInjectVersion}"
  compile "javax.inject:javax.inject:${javaxInjectVersion}"
  compile "io.micronaut:micronaut-validation:${micronautVersion}"
  compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
  compile "io.micronaut:micronaut-runtime:${micronautVersion}"
  compile "io.micronaut.graphql:micronaut-graphql:${micronautGQLVersion}"

  runtime "ch.qos.logback:logback-classic:${logbackClassicVersion}"
}

group = "com.oracle.coherence.examples"
version = "${projectVersion}"

tasks.withType(JavaCompile) {
  dependsOn npmInstall // ensure our react webapp is built
  options.encoding = "UTF-8"
}

ext {
  javaMainClass = "com.oracle.coherence.examples.todo.server.Application"
}

// Copies the react webapp to a build location to be included in the JAR
task copyWebappFiles(type: Copy) {
  from "${project.projectDir}/src/main/web/react/build"
  into "${buildDir}/resources/main/web"
}

// Builds our react webapp
node {
  nodeProjectDir = file("${project.projectDir}/src/main/web/react")
}

jib {
  containerizingMode = "packaged"
  from {
    image = "gcr.io/distroless/java:11"
  }
  to {
    image = "ghcr.io/coherence-community/${rootProject.name}"
    tags = ["${version}"]
  }
  container {
    ports = ["1408", "3000", "9612"]
    jvmFlags = ["-Dcoherence.metrics.http.enabled=true"]
  }
}

application {
  mainClassName = javaMainClass
  applicationDefaultJvmArgs = ["-Dcoherence.metrics.http.enabled=true"]
}

jar {
  dependsOn copyWebappFiles
  manifest {
    attributes(
            "Main-Class": javaMainClass
    )
  }
}

shadowJar {
  mergeServiceFiles()
}
